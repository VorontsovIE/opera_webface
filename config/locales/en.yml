# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

en:
  opera:
    will_start_soon: 'Task will start in two seconds.'
    task_performing: "Task is performing. You'll see results just as calculations are complete."
    reload_manually: "This page is to be updated/reloaded in %{timeout} seconds. If it's not done automatically, click <a href=\"%{redirect_url}\">here</a>"
    ticket_number:
      just_submitted: "Remember your ticket number <span class=\"ticket\">%{ticket}</span> to be able to view results later"
      in_queue: "Remember your ticket number <span class=\"ticket\">%{ticket}</span> to be able to view results later.<br>Task was sheduled at %{time_scheduled} and is in queue now"
      in_process: "Remember your ticket number <span class=\"ticket\">%{ticket}</span> to be able to view results later.<br>Task was sheduled at %{time_scheduled} and started at %{time_started}"
      finished: "Remember your ticket number <span class=\"ticket\">%{ticket}</span> to be able to view results later.<br>Your task have been completed at %{time_finished}"
  task_layout:
    download_results: 'Download results'
    task_details: 'Download task execution details'
  enumerize:
    data_model:
      data_model:
        PCM: 'PCM'
        PWM: 'PWM'
        PPM: 'PPM'
    background:
      mode:
        wordwise: 'None - word counts'
        gc_content: 'GC-content'
        frequencies: 'Frequencies'
    collection:
      hocomoco: 'HOCOMOCO'
      jaspar: 'JASPAR'
      selex: 'HT-SELEX'
      swissregulon: 'SwissRegulon'
      homer: 'HOMER'
  task_descriptions:
    EvaluateSimilarity: 'Evaluate similarity between two TFBS motifs using Jaccard metrics'
    ScanCollection: 'Scan collection for TFBS motifs similar to a given one'
    SnpScan: 'Find motifs which binds different allele variants with different affinity'
  task_parameters:
    Background:
      mode: 'Background model. One can specify ACGT-frequencies or use wordwise background (uniform background represented in number of words instead of part of all words)'
      gc_content: 'Background defined by GC-content. It should be value in range 0 to 1'
      frequencies: 'Background defined by frequencies of ACGT-nucleotides. There should be four values in range 0 to 1, their sum should be 1'
      Frequencies:
        a: 'Frequency of nucleotide A'
        c: 'Frequency of nucleotide C'
        g: 'Frequency of nucleotide G'
        t: 'Frequency of nucleotide T'
    DataModel:
      data_model: 'Data model of the motif. Can be either positional weight matrix(PWM) or positional count matrix(PCM) or positional frequency matrix(PFM)'
      matrix: 'Positional matrix of the motif in format according to its data model'
      effective_count: 'Effective samples set size for PPM-to-PCM-to-PWM conversion'
      pseudocount: 'Pseudocount to convert PCM to PWM'
    Perfectosape:
      Scan:
        snp_list: "List of sequences with SNPs. Each sample should be on a separate line. Samples should contain name of SNP and place of SNP surrounded with flanking sequences (it's preferable to have 25 nucleotides from each side).<br>Example:<br>rs10040172  gatttgccctgattgcagttactga[G/A]tggtacagacatcgtaataatctta"
        collection: 'Collection of transcription factor binding site motifs to test SNPs on'
        pvalue_cutoff: "Maximal pvalue to treat DNA subsequence as TF's site"
        fold_change_cutoff: "Minimal fraction of P-values to treat change in affinity as significant"
    Macroape:
      Scan:
        collection: 'Collection of transcription factor binding site motifs to test SNPs on'
        pvalue: 'P-value to obtain motif thresholds'
        pvalue_boundary: 'Upper boundary (default) means that the obtained P-value is greater than or equal to the requested P-value'
        similarity_cutoff: 'Minimal similarity to treat motifs as similar'
        precise_recalc_cutoff: 'Minimal similarity to recalculate similarity in precise mode (with greater discretization)'
      Compare:
        pvalue_boundary: 'Upper boundary (default) means that the obtained P-value is greater than or equal to the requested P-value'
        pvalue: 'P-value to obtain motif thresholds'
        discretization: 'PWM discretization'
  activemodel:
    errors:
      models:
        background:
          # The values :model, :attribute and :value are always available for interpolation
          # The value :count is available when applicable. Can be used for pluralization.
          attributes:
            mode:
              inclusion: "should be one of list: wordwise, GC-content, frequencies, but was %{value}"
  errors:
    attributes:
      pvalue_boundary:
        inclusion: "should be either lower or upper but was %{value}"

  time:
    formats:
      # default: "%a, %d %b %Y %H:%M:%S %z"
      default: "%B %d, %Y %H:%M:%S"
      short: "%d %b %H:%M"
      long: "%B %d, %Y %H:%M"
