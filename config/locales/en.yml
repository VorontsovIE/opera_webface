# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.
en:
  opera:
    will_start_soon: 'The task will start in a few seconds.'
    task_performing: "The task execution in progress. The results will appear below once calculations are complete."
    reload_manually: |
      This page will be updated in %{timeout} seconds.
      If it's not done automatically, please click <a href="%{redirect_url}">here</a>.
    ticket_number:
      just_submitted: |
        Please save your ticket number <span class="ticket">%{ticket}</span> to be able to view results later.
      in_queue: |
        Please save your ticket number <span class="ticket">%{ticket}</span> to be able to view results later.<br>
        The task was sheduled at %{time_scheduled} and is waiting in queue.
        <!-- тут бы хорошо еще вставить (your place in queue: X). -->
      in_process: |
        Please save your ticket number <span class="ticket">%{ticket}</span> to be able to view results later.<br>
        The task was sheduled at %{time_scheduled} and started at %{time_started}.
      finished: |
        Please save your ticket number <span class="ticket">%{ticket}</span> to be able to view results later.<br>
        Your task was completed at %{time_finished}.
  task_layout:
    download_results: 'Results'
    task_details: 'Task execution details'
  enumerize:
    data_model:
      data_model:
        PCM: 'PCM'
        PWM: 'PWM'
        PPM: 'PPM'
    background:
      mode:
        wordwise: 'None: exact word counts'
        gc_content: 'GC-content'
        frequencies: 'Frequencies'
    collection:
      hocomoco: 'HOCOMOCO-9'
      hocomoco_10_human: 'HOCOMOCO-10 (human)'
      hocomoco_10_mouse: 'HOCOMOCO-10 (mouse)'
      jaspar: 'JASPAR'
      selex: 'HT-SELEX'
      swissregulon: 'SwissRegulon'
      homer: 'HOMER'
    pvalue_boundary:
      lower: 'Lower'
      upper: 'Upper'
    motif_type:
        PCM: 'PCM'
        PWM: 'PWM'
        PPM: 'PPM'
    sequence_weighting_mode:
      simple: 'Simple'
      peak: 'Peak'
      weighted: 'Weighted'
    occurences_per_sequence:
      oops: 'OOPS'
      zoops: 'ZOOPS'
    speed_mode:
      fast: 'Fast'
      precise: 'Precise'
    motif_shape_prior:
      flat: 'flat'
      single: 'single'
      double: 'double'
  task_descriptions:
    EvaluateSimilarity: 'Evaluate Jaccard similarity between two TFBS models (motifs).'
    ScanCollection: 'Scan a collection for TFBS models (motifs) similar to a given query.'
    SnpScan: 'Find TFBS motifs binding alleles of a single-nucleotide variant with different affinity.'
    MotifDiscovery: 'ChIPMunk is a fast heuristic DNA motif digger based on greedy approach accompanied by bootstrapping. ChIPMunk identifies the strong motif with the maximum Discrete Information Content in a set of DNA sequences. ChIPMunk uses (extended) multifasta as the input format and supports IUPAC DNA letters in the input sequences. '
    MotifDiscoveryDi: 'diChIPMunk is a fast heuristic DNA motif digger based on greedy approach accompanied by bootstrapping. ChIPMunk identifies the strong motif with the maximum Discrete Information Content in a set of DNA sequences. ChIPMunk uses (extended) multifasta as the input format and supports IUPAC DNA letters in the input sequences. Dinucleotide version'
  task_parameters:
    BackgroundForm:
      mode: |
        Default option is to explicitly count
        uniformly distributed words from a k-mer dictionary (no
        backround). Another option is to use an i.i.d. random model (Bernoulli,
        ACGT-frequencies or GC-concent should be specified).
      gc_content: 'Background defined by GC-content, value should be in 0.0 to 1.0 range.'
      frequencies: |
        Background defined by frequencies of individual
        nucleotides. Values should be in 0.0 to 1.0 range summing up to
        1.0.
    FrequenciesForm:
      a: 'Frequency of A nucleotide.'
      c: 'Frequency of C nucleotide.'
      g: 'Frequency of G nucleotide.'
      t: 'Frequency of T nucleotide.'
    DataModelForm:
      data_model: |
        Data model of the tested motif. Can be positional
        weight matrix(PWM),  positional count matrix(PCM), or positional
        frequency matrix(PFM). PCM elements can be real numbers (in the
        case original sequences were weighted). PWM elements are assumed
        to come from a log-odds transformed PCM or PPM.
      matrix: 'Positional matrix of the motif according to its data model.'
      effective_count: 'Effective sample size (an assumed number of sequences) to convert PPM-to-PCM-to-PWM.'
      pseudocount: 'Pseudocount value to convert PCM to PWM, taken as log(words) by default. Positive numeric constant can be used instead of log.'
    Perfectosape:
      ScanForm:
        snp_list: |
          List of SNVs entries to be tested. Each entry should be on a separate line.
          Each entry should consist of an SNV name and the variant with
          flanking sequences, e.g.: <br>rs10040172&nbsp;gccctgattgcagttactga[G/A]tggtacagacatcgtaataa
          <br>It is suggested to use flanking sequences of ~25bps.
        collection: |
          Collection of transcription factor binding site models (motifs).
          Available collections:
          <a href="http://autosome.ru/HOCOMOCO/">HOCOMOCO</a>,
          <a href="http://jaspar.genereg.net/">JASPAR</a>,
          <a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2877582/">HT-SELEX</a>,
          <a href="http://swissregulon.unibas.ch/fcgi/sr">SwissRegulon</a>,
          and <a href="http://homer.salk.edu/homer/motif/motifDatabase.html">HOMER</a>.
        pvalue_cutoff: "P-value cutoff to treat a DNA subsequence as a TF binding site."
        fold_change_cutoff: "Minimal P-value fold change."
    Macroape:
      ScanForm:
        collection: |
          Collection of transcription factor binding site motifs to scan.
          Available collections:
          <a href="http://autosome.ru/HOCOMOCO/">HOCOMOCO</a>,
          <a href="http://jaspar.genereg.net/">JASPAR</a>,
          <a href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2877582/">HT-SELEX</a>,
          <a href="http://swissregulon.unibas.ch/fcgi/sr">SwissRegulon</a>,
          and <a href="http://homer.salk.edu/homer/motif/motifDatabase.html">HOMER</a>.
        pvalue: 'P-value level to select the motif thresholds.'
        pvalue_boundary: 'Upper boundary (default) means that the obtained P-value is greater than or equal to the requested P-value.'
        similarity_cutoff: 'Minimal similarity to report.'
        precise_recalc_cutoff: 'Minimal similarity to recheck in precise mode (with higher discretization level).'
      CompareForm:
        pvalue_boundary: 'Upper boundary (default) means that the obtained P-value is greater than or equal to the requested P-value.'
        pvalue: 'P-value level to select the motif thresholds.'
        discretization: 'PWM discretization.'
    Chipmunk:
      MotifDiscoveryForm:
        max_motif_length: 'Maximal length of motif to look for.'
        min_motif_length: 'Minimal length of motif to look for.'
        occurences_per_sequence: 'Number of occurences per sequence. <em>OOPS</em> is for one occurence per sequence. <em>ZOOPS</em> is for zero or one occurence per sequence.'
        sequence_weighting_mode: 'Sequence weighting mode: <em>simple</em> for unweighted sequences, <em>weight</em> for weighted sequences, <em>peak</em> for a sequence with nucleotides weighted differently.'
        speed_mode: '<em>Fast mode</em>: use to roughly and quickly estimate the motif in a given lenghts range.<br/><em>Precise mode</em>: use to produce an accurate motif representation in a smaller lengths range.'
        motif_shape_prior: "<em>Flat</em> (no prior); <em>single</em> box and <em>double</em> box motif shapes. Note, that motif shape prior won't affect very strong motifs or well-consistent data sets."
        sequence_list: 'List of sequences.'
        gc_content: 'Background GC-content. Use `auto` to estimate nucleotide frequencies from the provided set of input sequences or a value in a range from&nbsp;0&nbsp;to&nbsp;1.'

  matrices_rounded_hint: 'Rounded version of matrices are shown, download precise version.'
  # The values :model, :attribute and :value are always available for interpolation
  # The value :count is available when applicable. Can be used for pluralization.
  activemodel:
    errors:
      models:
        background_form:
          attributes:
            mode:
              inclusion: "Should be one of the following: wordwise, GC-content, frequencies; the given value was %{value}."
        data_model_form:
          attributes:
            motif_type:
              inclusion: 'Unknown motif type `%{value}`'
  errors:
    attributes:
      collection:
        inclusion: 'Unknown collection name `%{value}`'
      pvalue_boundary:
        inclusion: "Should be either lower or upper; the given value was %{value}."
      # attributes common for many models
  time:
    formats:
      # default: "%a, %d %b %Y %H:%M:%S %z"
      default: "%B %d, %Y %H:%M:%S"
      short: "%d %b %H:%M"
      long: "%B %d, %Y %H:%M"
