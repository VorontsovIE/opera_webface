= simple_form_for task, :as => :task, html: {class: 'task_params'} do |f|
  .row
    .span4.first_model
      = f.fields_for :first_motif do |motif_form|
        .data_model{ data: attribute_data(motif_form.object, nil, :data_model) }
          = motif_form.input :data_model, label: 'Data model', include_blank: false
        .matrix{ data: attribute_data(motif_form.object, nil, :matrix) }
          = motif_form.input :matrix, label: 'First matrix:', :as => :text
    .span4.second_model
      = f.fields_for :second_motif do |motif_form|
        .data_model{ data: attribute_data(motif_form.object, nil, :data_model) }
          = motif_form.input :data_model, label: 'Data model', include_blank: false
        .matrix{ data: attribute_data(motif_form.object, nil, :matrix) }
          = motif_form.input :matrix, label: 'Second matrix:', :as => :text

  Advanced options:
  .expand_button
    %a [+]
  .advanced_options
    .row
      .span3.pvalue{ data: task.attribute_data(:pvalue) }
        = f.input :pvalue, label: 'P-value:'
      .span3.pvalue_boundary{ data: task.attribute_data(:pvalue_boundary) }
        = f.input :pvalue_boundary, label: 'P-value boundary:', include_blank: false
    = render partial:'shared/background_model', locals: {task: task, form_builder: f, background_variable: :background, background_title: 'Background', background_class: 'background'}

    .dicretization{ data: task.attribute_data(:discretization) }
      = f.input :discretization, label: 'Discretization:'

    .data_model_specifiers.first_model
      = f.fields_for :first_motif do |motif_form|
        .effective_count{ data: attribute_data(motif_form.object, nil, :effective_count) }
          = motif_form.input :effective_count
        .pseudocount{ data: attribute_data(motif_form.object, nil, :pseudocount) }
          = motif_form.input :pseudocount, placeholder: 'Leave empty to use default value (logarithm of count)'

    .data_model_specifiers.second_model
      = f.fields_for :second_motif do |motif_form|
        .effective_count{ data: attribute_data(motif_form.object, nil, :effective_count) }
          = motif_form.input :effective_count
        .pseudocount{ data: attribute_data(motif_form.object, nil, :pseudocount) }
          = motif_form.input :pseudocount, placeholder: 'Leave empty to use default value (logarithm of count)'
  %br
  = f.submit 'Run', data: {disable_with: 'Sending request'}
