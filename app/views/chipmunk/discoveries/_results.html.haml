.motif_logo
  .direct
    %span.label Primary motif:
    = show_image(ticket, 'motif_small_direct.png')
  .revcomp
    %span.label Reverse complement:
    = show_image(ticket, 'motif_small_revcomp.png')
- pcm = Bioinform::MotifModel::PCM.from_string( SMBSMCore.get_content(ticket, 'motif.pcm') )
.dic
  DIC
  = pcm.dic
.kdic
  KDIC
  = pcm.kdic(Bioinform::Background::Uniform.frequencies)

.ppm
  .label PPM
  %pre><= Bioinform::MotifModel::PPM.from_string( SMBSMCore.get_content(ticket, 'motif.ppm') ).rounded(precision: 3)
.pwm
  .label PWM
  %pre><= Bioinform::MotifModel::PWM.from_string( SMBSMCore.get_content(ticket, 'motif.pwm') ).rounded(precision: 3)


.result_data
  = download_link t('task_layout.download_results'), ticket, 'task_result.txt'
  -# = snp_scan_table(task_results, task_params)
.input_data
  -# %h5.collection_name
  -#   Collection:
  -#   %em= I18n.t "enumerize.collection.#{task_params.collection}"
  -# .snp_list
  -#   .my-label
  -#     SNP list
  -#     = download_list ticket, {'txt' => 'snp_list.txt'}
  -#   %pre= (task_params.snp_list.lines.size <= 5) ? task_params.snp_list : task_params.snp_list.lines.first(5).join("\n") + "\n...\n"
  .show_task_params
    .download_sequences= download_link t('task_layout.sequences'), ticket, 'sequences.mfa'
    .download_params= download_link t('task_layout.task_details'), ticket, 'task_params.yaml'
